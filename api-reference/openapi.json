{
  "openapi": "3.0.0",
  "info": {
    "title": "AgentSerp API",
    "version": "1.0.0",
    "description": "API for search, extraction, summarization, and more."
  },
  "servers": [
    {
      "url": "https://5c75-2001-5a8-6cc-e000-55c0-f0b-9da7-10b0.ngrok-free.app",
      "description": "AgentSerp API"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "components": {
    "schemas": {},
    "parameters": {}
  },
  "paths": {
    "/search": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "query": {
                    "type": "string",
                    "description": "Natural-language search query"
                  },
                  "mode": {
                    "type": "string",
                    "enum": [
                      "auto",
                      "keyword",
                      "neural"
                    ],
                    "default": "auto",
                    "description": "Retrieval strategy: let backend choose, force keyword, or force embedding"
                  },
                  "depth": {
                    "type": "string",
                    "enum": [
                      "basic",
                      "advanced"
                    ],
                    "default": "basic",
                    "description": "Depth/quality tier; advanced costs more & may run longer"
                  },
                  "topic": {
                    "type": "string",
                    "enum": [
                      "general",
                      "news"
                    ],
                    "default": "general",
                    "description": "Domain-specific retrieval agent"
                  },
                  "max_results": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 50,
                    "default": 10,
                    "description": "Maximum number of results to return"
                  },
                  "add_answer": {
                    "anyOf": [
                      {
                        "type": "boolean",
                        "enum": [
                          false
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "basic"
                        ]
                      },
                      {
                        "type": "string",
                        "enum": [
                          "detailed"
                        ]
                      }
                    ],
                    "default": false,
                    "description": "`false` → no answer. `basic` → one-sentence LLM answer. `detailed` → richer"
                  },
                  "include_raw_content": {
                    "type": "boolean",
                    "default": false,
                    "description": "If true, include cleaned HTML text in each result"
                  },
                  "include_images": {
                    "type": "boolean",
                    "default": false,
                    "description": "If true, also run an image search"
                  },
                  "recency": {
                    "anyOf": [
                      {
                        "type": "string",
                        "enum": [
                          "day",
                          "week",
                          "month",
                          "year"
                        ],
                        "description": "Human shortcut for common recency windows"
                      },
                      {
                        "type": "integer",
                        "minimum": 0,
                        "exclusiveMinimum": true
                      }
                    ],
                    "description": "Limit results to this many days in the past or a preset"
                  },
                  "filters": {
                    "type": "object",
                    "properties": {
                      "include_domains": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Restrict results to these hostnames"
                      },
                      "exclude_domains": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Omit any result whose hostname matches"
                      },
                      "include_text": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Require these tokens appear in document body"
                      },
                      "exclude_text": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Reject docs containing these tokens"
                      }
                    },
                    "description": "Fine-grained filtering for /search"
                  },
                  "view": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "results",
                        "answer",
                        "images",
                        "embeddings"
                      ],
                      "description": "Selective blocks to include in response"
                    },
                    "default": [
                      "results"
                    ],
                    "description": "Which data blocks to include in the response"
                  },
                  "similar_to": {
                    "type": "string",
                    "format": "uri",
                    "description": "Return docs similar to this URL instead of keyword search"
                  },
                  "stream": {
                    "type": "boolean",
                    "description": "If true, respond with NDJSON streaming"
                  },
                  "response_format": {
                    "type": "string",
                    "enum": [
                      "json",
                      "ndjson",
                      "csv",
                      "parquet"
                    ],
                    "description": "Serialization format for large/bulk results"
                  },
                  "user_context": {
                    "type": "object",
                    "additionalProperties": {
                      "nullable": true
                    },
                    "description": "Opaque object echoed for personalization"
                  }
                },
                "required": [
                  "query"
                ],
                "description": "Input contract for POST /search"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Search results",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "request_id": {
                      "type": "string",
                      "description": "Echo of client-supplied ID or server-assigned UUID"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "answer": {
                          "type": "string",
                          "description": "LLM answer if requested"
                        },
                        "results": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "title": {
                                "type": "string",
                                "description": "Human-readable title of the document"
                              },
                              "url": {
                                "type": "string",
                                "description": "Canonical URL of the document"
                              },
                              "content": {
                                "type": "string",
                                "description": "Snippet or full text, depending on request"
                              },
                              "score": {
                                "type": "number",
                                "minimum": 0,
                                "maximum": 1,
                                "description": "Relevance score (0-1) where 1 is most relevant"
                              },
                              "meta": {
                                "type": "object",
                                "additionalProperties": {
                                  "nullable": true
                                },
                                "description": "Backend-specific key-value pairs (author, publishedDate, etc.)"
                              }
                            },
                            "required": [
                              "title",
                              "url"
                            ],
                            "description": "Generic doc object used across endpoints"
                          },
                          "description": "Ordered list of search hits"
                        },
                        "images": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "url": {
                                "type": "string",
                                "format": "uri"
                              },
                              "alt": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "url"
                            ],
                            "description": "Image URL plus alt text"
                          }
                        },
                        "embeddings": {
                          "type": "array",
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "number"
                            }
                          },
                          "description": "Vector embeddings in the same order as `results`"
                        }
                      },
                      "description": "Endpoint-specific payload"
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "api_version": {
                          "type": "string",
                          "description": "Semantic version string of the API that produced the response"
                        },
                        "processing_ms": {
                          "type": "integer",
                          "description": "Time taken on the server to satisfy the request, in ms"
                        },
                        "tokens_used": {
                          "type": "integer",
                          "description": "Total LLM tokens consumed (prompt+completion)"
                        },
                        "cost": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "number",
                              "minimum": 0,
                              "description": "Total dollar cost for serving this request"
                            },
                            "breakdown": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "number",
                                "minimum": 0
                              },
                              "description": "Optional map of operation → incremental cost (e.g. neuralSearch: 0.004)"
                            }
                          },
                          "required": [
                            "total"
                          ],
                          "description": "Per-request cost information"
                        }
                      },
                      "required": [
                        "api_version"
                      ],
                      "description": "Metadata block attached to every response"
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "description": "Universal response wrapper"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/extract": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string",
                    "format": "uri",
                    "description": "Page to fetch & parse"
                  },
                  "include_images": {
                    "type": "boolean",
                    "default": false,
                    "description": "Also list images found in the page"
                  },
                  "depth": {
                    "type": "string",
                    "enum": [
                      "basic",
                      "advanced"
                    ],
                    "default": "basic",
                    "description": "basic = quick readability parse; advanced = table extraction etc."
                  },
                  "stream": {
                    "type": "boolean"
                  },
                  "response_format": {
                    "type": "string",
                    "enum": [
                      "json",
                      "ndjson",
                      "csv",
                      "parquet"
                    ],
                    "description": "Serialization format for large/bulk results"
                  }
                },
                "required": [
                  "url"
                ],
                "description": "Input for POST /extract"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Extracted content",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "request_id": {
                      "type": "string",
                      "description": "Echo of client-supplied ID or server-assigned UUID"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "document": {
                          "type": "object",
                          "properties": {
                            "title": {
                              "type": "string",
                              "description": "Human-readable title of the document"
                            },
                            "url": {
                              "type": "string",
                              "description": "Canonical URL of the document"
                            },
                            "content": {
                              "type": "string",
                              "description": "Snippet or full text, depending on request"
                            },
                            "score": {
                              "type": "number",
                              "minimum": 0,
                              "maximum": 1,
                              "description": "Relevance score (0-1) where 1 is most relevant"
                            },
                            "meta": {
                              "type": "object",
                              "additionalProperties": {
                                "nullable": true
                              },
                              "description": "Backend-specific key-value pairs (author, publishedDate, etc.)"
                            },
                            "raw_content": {
                              "type": "string",
                              "description": "Full raw (markdown) content of the page"
                            },
                            "images": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "format": "uri"
                              }
                            }
                          },
                          "required": [
                            "title",
                            "url"
                          ],
                          "description": "Generic doc object used across endpoints"
                        }
                      },
                      "required": [
                        "document"
                      ],
                      "description": "Endpoint-specific payload"
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "api_version": {
                          "type": "string",
                          "description": "Semantic version string of the API that produced the response"
                        },
                        "processing_ms": {
                          "type": "integer",
                          "description": "Time taken on the server to satisfy the request, in ms"
                        },
                        "tokens_used": {
                          "type": "integer",
                          "description": "Total LLM tokens consumed (prompt+completion)"
                        },
                        "cost": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "number",
                              "minimum": 0,
                              "description": "Total dollar cost for serving this request"
                            },
                            "breakdown": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "number",
                                "minimum": 0
                              },
                              "description": "Optional map of operation → incremental cost (e.g. neuralSearch: 0.004)"
                            }
                          },
                          "required": [
                            "total"
                          ],
                          "description": "Per-request cost information"
                        }
                      },
                      "required": [
                        "api_version"
                      ],
                      "description": "Metadata block attached to every response"
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "description": "Universal response wrapper"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/similar": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string",
                    "format": "uri",
                    "description": "Anchor URL to match"
                  },
                  "max_results": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 50,
                    "default": 10,
                    "description": "How many neighbors to return"
                  }
                },
                "required": [
                  "url"
                ],
                "description": "Input for POST /similar"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Similar documents",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "request_id": {
                      "type": "string",
                      "description": "Echo of client-supplied ID or server-assigned UUID"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "title": {
                                "type": "string",
                                "description": "Human-readable title of the document"
                              },
                              "url": {
                                "type": "string",
                                "description": "Canonical URL of the document"
                              },
                              "content": {
                                "type": "string",
                                "description": "Snippet or full text, depending on request"
                              },
                              "score": {
                                "type": "number",
                                "minimum": 0,
                                "maximum": 1,
                                "description": "Relevance score (0-1) where 1 is most relevant"
                              },
                              "meta": {
                                "type": "object",
                                "additionalProperties": {
                                  "nullable": true
                                },
                                "description": "Backend-specific key-value pairs (author, publishedDate, etc.)"
                              }
                            },
                            "required": [
                              "title",
                              "url"
                            ],
                            "description": "Generic doc object used across endpoints"
                          }
                        }
                      },
                      "required": [
                        "results"
                      ],
                      "description": "Endpoint-specific payload"
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "api_version": {
                          "type": "string",
                          "description": "Semantic version string of the API that produced the response"
                        },
                        "processing_ms": {
                          "type": "integer",
                          "description": "Time taken on the server to satisfy the request, in ms"
                        },
                        "tokens_used": {
                          "type": "integer",
                          "description": "Total LLM tokens consumed (prompt+completion)"
                        },
                        "cost": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "number",
                              "minimum": 0,
                              "description": "Total dollar cost for serving this request"
                            },
                            "breakdown": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "number",
                                "minimum": 0
                              },
                              "description": "Optional map of operation → incremental cost (e.g. neuralSearch: 0.004)"
                            }
                          },
                          "required": [
                            "total"
                          ],
                          "description": "Per-request cost information"
                        }
                      },
                      "required": [
                        "api_version"
                      ],
                      "description": "Metadata block attached to every response"
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "description": "Universal response wrapper"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/crawl": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string",
                    "format": "uri",
                    "description": "Root URL to spider"
                  },
                  "max_depth": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 10,
                    "default": 2,
                    "description": "Maximum link depth from the root page"
                  },
                  "render_js": {
                    "type": "boolean",
                    "default": false,
                    "description": "Enable headless-browser rendering"
                  },
                  "response_format": {
                    "type": "string",
                    "enum": [
                      "json",
                      "ndjson",
                      "csv",
                      "parquet"
                    ],
                    "default": "ndjson",
                    "description": "Serialization format for large/bulk results"
                  }
                },
                "required": [
                  "url"
                ],
                "description": "Input for POST /crawl (sync version returns presigned link)"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Crawl results link",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "request_id": {
                      "type": "string",
                      "description": "Echo of client-supplied ID or server-assigned UUID"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "csv_link": {
                          "type": "string",
                          "format": "uri",
                          "description": "Presigned link to a CSV/NDJSON of crawl data"
                        }
                      },
                      "required": [
                        "csv_link"
                      ],
                      "description": "Endpoint-specific payload"
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "api_version": {
                          "type": "string",
                          "description": "Semantic version string of the API that produced the response"
                        },
                        "processing_ms": {
                          "type": "integer",
                          "description": "Time taken on the server to satisfy the request, in ms"
                        },
                        "tokens_used": {
                          "type": "integer",
                          "description": "Total LLM tokens consumed (prompt+completion)"
                        },
                        "cost": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "number",
                              "minimum": 0,
                              "description": "Total dollar cost for serving this request"
                            },
                            "breakdown": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "number",
                                "minimum": 0
                              },
                              "description": "Optional map of operation → incremental cost (e.g. neuralSearch: 0.004)"
                            }
                          },
                          "required": [
                            "total"
                          ],
                          "description": "Per-request cost information"
                        }
                      },
                      "required": [
                        "api_version"
                      ],
                      "description": "Metadata block attached to every response"
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "description": "Universal response wrapper"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/bulk/search": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "queries": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "minItems": 1,
                    "description": "List of queries to run"
                  },
                  "response_format": {
                    "type": "string",
                    "enum": [
                      "json",
                      "ndjson",
                      "csv",
                      "parquet"
                    ],
                    "default": "ndjson",
                    "description": "Serialization format for large/bulk results"
                  }
                },
                "required": [
                  "queries"
                ],
                "description": "Input for POST /bulk/search"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Bulk search results link",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "request_id": {
                      "type": "string",
                      "description": "Echo of client-supplied ID or server-assigned UUID"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "download_link": {
                          "type": "string",
                          "format": "uri",
                          "description": "Presigned bulk result file"
                        }
                      },
                      "required": [
                        "download_link"
                      ],
                      "description": "Endpoint-specific payload"
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "api_version": {
                          "type": "string",
                          "description": "Semantic version string of the API that produced the response"
                        },
                        "processing_ms": {
                          "type": "integer",
                          "description": "Time taken on the server to satisfy the request, in ms"
                        },
                        "tokens_used": {
                          "type": "integer",
                          "description": "Total LLM tokens consumed (prompt+completion)"
                        },
                        "cost": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "number",
                              "minimum": 0,
                              "description": "Total dollar cost for serving this request"
                            },
                            "breakdown": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "number",
                                "minimum": 0
                              },
                              "description": "Optional map of operation → incremental cost (e.g. neuralSearch: 0.004)"
                            }
                          },
                          "required": [
                            "total"
                          ],
                          "description": "Per-request cost information"
                        }
                      },
                      "required": [
                        "api_version"
                      ],
                      "description": "Metadata block attached to every response"
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "description": "Universal response wrapper"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/bulk/extract": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "urls": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uri"
                    },
                    "minItems": 1,
                    "description": "Pages to extract"
                  },
                  "response_format": {
                    "type": "string",
                    "enum": [
                      "json",
                      "ndjson",
                      "csv",
                      "parquet"
                    ],
                    "default": "ndjson",
                    "description": "Serialization format for large/bulk results"
                  }
                },
                "required": [
                  "urls"
                ],
                "description": "Input for POST /bulk/extract"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Bulk extraction results link",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "request_id": {
                      "type": "string",
                      "description": "Echo of client-supplied ID or server-assigned UUID"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "download_link": {
                          "type": "string",
                          "format": "uri",
                          "description": "Presigned bulk result file"
                        }
                      },
                      "required": [
                        "download_link"
                      ],
                      "description": "Endpoint-specific payload"
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "api_version": {
                          "type": "string",
                          "description": "Semantic version string of the API that produced the response"
                        },
                        "processing_ms": {
                          "type": "integer",
                          "description": "Time taken on the server to satisfy the request, in ms"
                        },
                        "tokens_used": {
                          "type": "integer",
                          "description": "Total LLM tokens consumed (prompt+completion)"
                        },
                        "cost": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "number",
                              "minimum": 0,
                              "description": "Total dollar cost for serving this request"
                            },
                            "breakdown": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "number",
                                "minimum": 0
                              },
                              "description": "Optional map of operation → incremental cost (e.g. neuralSearch: 0.004)"
                            }
                          },
                          "required": [
                            "total"
                          ],
                          "description": "Per-request cost information"
                        }
                      },
                      "required": [
                        "api_version"
                      ],
                      "description": "Metadata block attached to every response"
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "description": "Universal response wrapper"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/summarize": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string",
                    "format": "uri",
                    "description": "Document to summarize"
                  },
                  "schema": {
                    "type": "object",
                    "additionalProperties": {
                      "nullable": true
                    },
                    "description": "Optional JSON-Schema for structured summary"
                  }
                },
                "required": [
                  "url"
                ],
                "description": "Input for POST /summarize"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Document summary",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "request_id": {
                      "type": "string",
                      "description": "Echo of client-supplied ID or server-assigned UUID"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "summary": {
                          "nullable": true,
                          "description": "Free text or schema-shaped JSON"
                        }
                      },
                      "description": "Endpoint-specific payload"
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "api_version": {
                          "type": "string",
                          "description": "Semantic version string of the API that produced the response"
                        },
                        "processing_ms": {
                          "type": "integer",
                          "description": "Time taken on the server to satisfy the request, in ms"
                        },
                        "tokens_used": {
                          "type": "integer",
                          "description": "Total LLM tokens consumed (prompt+completion)"
                        },
                        "cost": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "number",
                              "minimum": 0,
                              "description": "Total dollar cost for serving this request"
                            },
                            "breakdown": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "number",
                                "minimum": 0
                              },
                              "description": "Optional map of operation → incremental cost (e.g. neuralSearch: 0.004)"
                            }
                          },
                          "required": [
                            "total"
                          ],
                          "description": "Per-request cost information"
                        }
                      },
                      "required": [
                        "api_version"
                      ],
                      "description": "Metadata block attached to every response"
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "description": "Universal response wrapper"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/rerank": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "documents": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "title": {
                          "type": "string",
                          "description": "Human-readable title of the document"
                        },
                        "url": {
                          "type": "string",
                          "description": "Canonical URL of the document"
                        },
                        "content": {
                          "type": "string",
                          "description": "Snippet or full text, depending on request"
                        },
                        "score": {
                          "type": "number",
                          "minimum": 0,
                          "maximum": 1,
                          "description": "Relevance score (0-1) where 1 is most relevant"
                        },
                        "meta": {
                          "type": "object",
                          "additionalProperties": {
                            "nullable": true
                          },
                          "description": "Backend-specific key-value pairs (author, publishedDate, etc.)"
                        }
                      },
                      "required": [
                        "title",
                        "url"
                      ],
                      "description": "Generic doc object used across endpoints"
                    },
                    "minItems": 1,
                    "description": "Items to reorder"
                  },
                  "query": {
                    "type": "string",
                    "description": "Optional query to steer ranking"
                  },
                  "mode": {
                    "type": "string",
                    "enum": [
                      "llm",
                      "bm25",
                      "hybrid"
                    ],
                    "default": "llm",
                    "description": "Ranking algorithm"
                  }
                },
                "required": [
                  "documents"
                ],
                "description": "Input for POST /rerank"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Reranked documents",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "request_id": {
                      "type": "string",
                      "description": "Echo of client-supplied ID or server-assigned UUID"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "results": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "title": {
                                "type": "string",
                                "description": "Human-readable title of the document"
                              },
                              "url": {
                                "type": "string",
                                "description": "Canonical URL of the document"
                              },
                              "content": {
                                "type": "string",
                                "description": "Snippet or full text, depending on request"
                              },
                              "score": {
                                "type": "number",
                                "minimum": 0,
                                "maximum": 1,
                                "description": "Relevance score (0-1) where 1 is most relevant"
                              },
                              "meta": {
                                "type": "object",
                                "additionalProperties": {
                                  "nullable": true
                                },
                                "description": "Backend-specific key-value pairs (author, publishedDate, etc.)"
                              }
                            },
                            "required": [
                              "title",
                              "url"
                            ],
                            "description": "Generic doc object used across endpoints"
                          }
                        }
                      },
                      "required": [
                        "results"
                      ],
                      "description": "Endpoint-specific payload"
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "api_version": {
                          "type": "string",
                          "description": "Semantic version string of the API that produced the response"
                        },
                        "processing_ms": {
                          "type": "integer",
                          "description": "Time taken on the server to satisfy the request, in ms"
                        },
                        "tokens_used": {
                          "type": "integer",
                          "description": "Total LLM tokens consumed (prompt+completion)"
                        },
                        "cost": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "number",
                              "minimum": 0,
                              "description": "Total dollar cost for serving this request"
                            },
                            "breakdown": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "number",
                                "minimum": 0
                              },
                              "description": "Optional map of operation → incremental cost (e.g. neuralSearch: 0.004)"
                            }
                          },
                          "required": [
                            "total"
                          ],
                          "description": "Per-request cost information"
                        }
                      },
                      "required": [
                        "api_version"
                      ],
                      "description": "Metadata block attached to every response"
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "description": "Universal response wrapper"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/classify": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "texts": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "minItems": 1,
                    "description": "Texts to classify"
                  },
                  "labels": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "minItems": 1,
                    "description": "Candidate labels"
                  }
                },
                "required": [
                  "texts",
                  "labels"
                ],
                "description": "Input for POST /classify"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Classification results",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "request_id": {
                      "type": "string",
                      "description": "Echo of client-supplied ID or server-assigned UUID"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "predictions": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "text": {
                                "type": "string"
                              },
                              "label": {
                                "type": "string"
                              },
                              "score": {
                                "type": "number"
                              }
                            },
                            "required": [
                              "text",
                              "label",
                              "score"
                            ]
                          },
                          "description": "Best label per text with confidence"
                        }
                      },
                      "required": [
                        "predictions"
                      ],
                      "description": "Endpoint-specific payload"
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "api_version": {
                          "type": "string",
                          "description": "Semantic version string of the API that produced the response"
                        },
                        "processing_ms": {
                          "type": "integer",
                          "description": "Time taken on the server to satisfy the request, in ms"
                        },
                        "tokens_used": {
                          "type": "integer",
                          "description": "Total LLM tokens consumed (prompt+completion)"
                        },
                        "cost": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "number",
                              "minimum": 0,
                              "description": "Total dollar cost for serving this request"
                            },
                            "breakdown": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "number",
                                "minimum": 0
                              },
                              "description": "Optional map of operation → incremental cost (e.g. neuralSearch: 0.004)"
                            }
                          },
                          "required": [
                            "total"
                          ],
                          "description": "Per-request cost information"
                        }
                      },
                      "required": [
                        "api_version"
                      ],
                      "description": "Metadata block attached to every response"
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "description": "Universal response wrapper"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/chat/completions": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "model": {
                    "type": "string",
                    "description": "LLM engine to use"
                  },
                  "messages": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "role": {
                          "type": "string",
                          "enum": [
                            "system",
                            "user",
                            "assistant",
                            "tool"
                          ],
                          "description": "OpenAI-style chat roles"
                        },
                        "content": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "role",
                        "content"
                      ],
                      "description": "Single chat message"
                    },
                    "minItems": 1
                  },
                  "search": {
                    "type": "object",
                    "properties": {
                      "domain_filter": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Allowed hostnames while augmenting answer"
                      },
                      "recency": {
                        "anyOf": [
                          {
                            "type": "string",
                            "enum": [
                              "day",
                              "week",
                              "month",
                              "year"
                            ],
                            "description": "Human shortcut for common recency windows"
                          },
                          {
                            "type": "integer",
                            "minimum": 0,
                            "exclusiveMinimum": true
                          }
                        ],
                        "description": "Recency constraint for on-the-fly search"
                      }
                    },
                    "description": "Optional search-control block for chat"
                  },
                  "stream": {
                    "type": "boolean",
                    "description": "If true, SSE stream; else aggregate JSON"
                  },
                  "user_context": {
                    "type": "object",
                    "additionalProperties": {
                      "nullable": true
                    },
                    "description": "Opaque dict preserved across turns"
                  }
                },
                "required": [
                  "model",
                  "messages"
                ],
                "description": "Input for POST /chat/completions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Chat completion",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "request_id": {
                      "type": "string",
                      "description": "Echo of client-supplied ID or server-assigned UUID"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "choices": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "index": {
                                "type": "integer"
                              },
                              "message": {
                                "type": "object",
                                "properties": {
                                  "role": {
                                    "type": "string",
                                    "enum": [
                                      "system",
                                      "user",
                                      "assistant",
                                      "tool"
                                    ],
                                    "description": "OpenAI-style chat roles"
                                  },
                                  "content": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "role",
                                  "content"
                                ],
                                "description": "Single chat message"
                              }
                            },
                            "required": [
                              "index",
                              "message"
                            ],
                            "description": "One completion option"
                          }
                        }
                      },
                      "required": [
                        "choices"
                      ],
                      "description": "Endpoint-specific payload"
                    },
                    "meta": {
                      "type": "object",
                      "properties": {
                        "api_version": {
                          "type": "string",
                          "description": "Semantic version string of the API that produced the response"
                        },
                        "processing_ms": {
                          "type": "integer",
                          "description": "Time taken on the server to satisfy the request, in ms"
                        },
                        "tokens_used": {
                          "type": "integer",
                          "description": "Total LLM tokens consumed (prompt+completion)"
                        },
                        "cost": {
                          "type": "object",
                          "properties": {
                            "total": {
                              "type": "number",
                              "minimum": 0,
                              "description": "Total dollar cost for serving this request"
                            },
                            "breakdown": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "number",
                                "minimum": 0
                              },
                              "description": "Optional map of operation → incremental cost (e.g. neuralSearch: 0.004)"
                            }
                          },
                          "required": [
                            "total"
                          ],
                          "description": "Per-request cost information"
                        }
                      },
                      "required": [
                        "api_version"
                      ],
                      "description": "Metadata block attached to every response"
                    }
                  },
                  "required": [
                    "data"
                  ],
                  "description": "Universal response wrapper"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "error"
                  ]
                }
              }
            }
          }
        }
      }
    }
  }
}